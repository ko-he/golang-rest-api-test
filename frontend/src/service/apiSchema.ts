/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/coffees": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** コーヒーを作成する */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description コーヒーの名前 */
                        name: string;
                        /** @description コーヒーの香りや味わいにのコメント */
                        comment: string;
                        /** @description 産地 */
                        productionArea: string;
                        /** @description コクのスコア */
                        richScore: number;
                        /** @description 苦みのスコア */
                        bitternessScore: number;
                        /** @description 酸味のスコア */
                        sournessScore: number;
                        /** @description 香りのスコア */
                        aromaScore: number;
                    };
                };
            };
            responses: {
                200: components["responses"]["OkWithId"];
                400: components["responses"]["BadRequest"];
                401: components["responses"]["Unauthorized"];
                409: components["responses"]["Conflict"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/coffees/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** コーヒーを取得する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description 初回メール配信日時 */
                            coffee: {
                                /**
                                 * Format: uuid
                                 * @description コーヒーID
                                 */
                                id?: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description コーヒー */
        Coffee: {
            /**
             * Format: uuid
             * @description コーヒー ID
             */
            id: string;
            /** @description コーヒーの名前 */
            name: string;
            /** @description コーヒーの香りや味わいにのコメント */
            comment: string;
            /** @description コクのスコア */
            richScore: number;
            /** @description 苦みのスコア */
            bitternessScore: number;
            /** @description 酸味のスコア */
            sournessScore: number;
            /** @description 香りのスコア */
            aromaScore: number;
        };
        /** @description エラー */
        Error: {
            /** @description エラー ID */
            id: string;
            /** @description エラーメッセージ */
            message: string;
        };
    };
    responses: {
        /** @description OK */
        Ok: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": Record<string, never>;
            };
        };
        /** @description OK */
        OkWithId: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * Format: uuid
                     * @description ID
                     */
                    id: string;
                };
            };
        };
        /** @description Bad Request */
        BadRequest: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description Unauthorized */
        Unauthorized: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description Forbidden */
        Forbidden: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description Not Found */
        NotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description Conflict */
        Conflict: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
